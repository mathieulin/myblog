[{"content":"可能会有所遗漏，建议还是配合视频使用吧\n1. conda环境的安装 lab7/resource下有miniconda包，传到服务器上\nbash Miniconda\u0026hellip;..安装无脑莽\n2. Conda 启动 conda create \u0026ndash;name django python=3.8\nconda activate django\n3.将项目传到服务器 pip install -r requirements.txt\npip install django-cors-headers\npython manage.py runserver 0.0.0.0:8000\n3.tmux后台挂载后端项目 sudo apt install tmux\ntmux new -s django\nconda activate django\ncd /home/Todolist/todolist_backend\npython manage.py runserver 0.0.0.0:8000\n#重新连接\ntmux attach-session django\n4. 不如uwsgi conda activate django\nconda install -c conda-forge uwsgi\n在项目目录下(/home/Todolist/todolist_backend)\ntouch uwsgi.ini\n[uwsgi] socket = 127.0.0.1:8080 chdir = /home/Todolist/todolist_backend wsgi-file = /home/Todolist/todolist_backend/djangoProject/wsgi.py master = true eneble-threads = true processes = 8 buffer-size = 65536 vacuum = true daemonize = /home/Todolist/todolist_backend/uswgi.log virtualenv = /root/miniconda3/envs/django uwsgi_read_timeout = 600 threads = 4 chmod-socket = 664 运行 uwsgi \u0026ndash;ini uwsgi.ini\n停止 lsof -i:8080或者\nps -ef|grep uwsgi\n一个个进程kill\n5. nginx （这里前端也要使用）\nsudo systemctl start nginx //检查一下 sudo nginx -t //重启一下 sudo nginx -s reload ","permalink":"https://mathieulin.github.io/myblog/posts/%E5%90%8E%E7%AB%AF%E9%83%A8%E7%BD%B2/","summary":"可能会有所遗漏，建议还是配合视频使用吧\n1. conda环境的安装 lab7/resource下有miniconda包，传到服务器上\nbash Miniconda\u0026hellip;..安装无脑莽\n2. Conda 启动 conda create \u0026ndash;name django python=3.8\nconda activate django\n3.将项目传到服务器 pip install -r requirements.txt\npip install django-cors-headers\npython manage.py runserver 0.0.0.0:8000\n3.tmux后台挂载后端项目 sudo apt install tmux\ntmux new -s django\nconda activate django\ncd /home/Todolist/todolist_backend\npython manage.py runserver 0.0.0.0:8000\n#重新连接\ntmux attach-session django\n4. 不如uwsgi conda activate django\nconda install -c conda-forge uwsgi\n在项目目录下(/home/Todolist/todolist_backend)\ntouch uwsgi.ini\n[uwsgi] socket = 127.0.0.1:8080 chdir = /home/Todolist/todolist_backend wsgi-file = /home/Todolist/todolist_backend/djangoProject/wsgi.","title":"后端项目傻逼式部署"},{"content":"TodoList TodoList Vue前端项目 TodoList Django后端项目 1. 建立数据表 数据库的配置文件在主目录下\ndjangoProject\\settings.py中\n数据库可视化工具直接建表\nusers表存储用户id，密码\ntodolist表，由于mysql数据库无法存储json格式的文件，因此我们将用户的todo放到多行数据中显示，每一行包括todo的id（主键），用户id（外键），是否完成， 是否可删除， 标题， 开始时间，结束时间\n2. 将数据表导出为模型 我这里用的是conda环境，所以需要在命令行中执行\n首页，激活环境\nconda activate django 然后我们建立一个app，我们就叫做TodoList了\ndjango-admin.py startapp TodoList # 将数据库的表的模型用inspectdb命令转换 python manage.py inspectdb \u0026gt; TodoList/models.py 然后我们在settings.py中注册这个TodoList\npython manage.py makemigrations python manage.py migrate 前后端 一大恶心之处就是跨域访问，我是这么解决的 前端项目中的main.js\n// main.js import axios from \u0026#39;axios\u0026#39; Vue.prototype.$axios = axios axios.defaults.baseURL = \u0026#39;http://127.0.0.1:8000/api/todo\u0026#39;; axios.defaults.headers.post[\u0026#39;Content-Type\u0026#39;] = \u0026#39;application/x-www-fromurlencodeed\u0026#39; axios.defaults.headers[\u0026#39;Content-Type\u0026#39;]=\u0026#39;application/x-www-form-urlencoded\u0026#39;; 后端项目中\nallowed_origins = [\u0026#39;http://127.0.0.1:8000\u0026#39;] origin = request.headers[\u0026#39;Origin\u0026#39;] response = JsonResponse({\u0026#39;errno\u0026#39;: 1001, \u0026#39;msg\u0026#39;: \u0026#34;请求方式错误\u0026#34;}) response[\u0026#34;Access-Control-Allow-Origin\u0026#34;] = origin return response 挺麻烦的，整了好久。好像有工具包可以来跨域访问，但我pip安装出问题了\n交互 我这里一般是前端传json格式\nthis.$axios({ method: \u0026#39;POST\u0026#39;, /* 指明请求方式，可以是 get 或 post */ url: \u0026#39;/loadTodo\u0026#39;, /* 指明后端 api 路径，由于在 main.js 已指定根路径，因此在此处只需写相对路由 */ data: qs.stringify({ /* 需要向后端传输的数据，此处使用 qs.stringify 将 json 数据序列化以发送后端 */ uid:this.$store.state.user.username }) }) .then(result =\u0026gt; { /* res 是 response 的缩写 */ if (result.data.errno === 0) /* res.data 是后端返回的数据对象 */ console.log(result.data.res); else alert(\u0026#34;获取失败！\u0026#34;); }) .catch(err =\u0026gt; { /* 请求若出现路由找不到等其它异常，则在终端输出错误信息 */ console.log(err); }) 然后后端\n@csrf_exempt def loadTodo(request): allowed_origins = [\u0026#39;http://127.0.0.1:8000\u0026#39;] origin = request.headers[\u0026#39;Origin\u0026#39;] if request.method == \u0026#39;POST\u0026#39;: print(\u0026#34;i am here\u0026#34;) uid = request.POST.get(\u0026#39;uid\u0026#39;) print(uid) # print(request.session[\u0026#39;uid\u0026#39;]) todos = Todolist.objects.all() res = [] for todo in todos: if todo.uid == uid: todoJson = {\u0026#34;uid\u0026#34;: todo.uid, \u0026#34;id\u0026#34;: todo.id, \u0026#34;title\u0026#34;: todo.title, \u0026#34;isDone\u0026#34;: todo.isdone, \u0026#34;operated\u0026#34;: todo.operated, \u0026#34;date_begin\u0026#34;: todo.date_begin, \u0026#34;date_end\u0026#34;: todo.date_end} res.append(todoJson) res = {\u0026#34;res\u0026#34;: res} response = JsonResponse({\u0026#39;errno\u0026#39;: 0, \u0026#39;data\u0026#39;: res}) response[\u0026#34;Access-Control-Allow-Origin\u0026#34;] = origin return response else: response = JsonResponse({\u0026#39;errno\u0026#39;: 1001, \u0026#39;msg\u0026#39;: \u0026#34;请求方式错误\u0026#34;}) response[\u0026#34;Access-Control-Allow-Origin\u0026#34;] = origin return response 使用request.POST.get来获取值，然后将response传回前端\n前端result.data.data可以接收传回来的信息\n","permalink":"https://mathieulin.github.io/myblog/posts/todolist/","summary":"TodoList TodoList Vue前端项目 TodoList Django后端项目 1. 建立数据表 数据库的配置文件在主目录下\ndjangoProject\\settings.py中\n数据库可视化工具直接建表\nusers表存储用户id，密码\ntodolist表，由于mysql数据库无法存储json格式的文件，因此我们将用户的todo放到多行数据中显示，每一行包括todo的id（主键），用户id（外键），是否完成， 是否可删除， 标题， 开始时间，结束时间\n2. 将数据表导出为模型 我这里用的是conda环境，所以需要在命令行中执行\n首页，激活环境\nconda activate django 然后我们建立一个app，我们就叫做TodoList了\ndjango-admin.py startapp TodoList # 将数据库的表的模型用inspectdb命令转换 python manage.py inspectdb \u0026gt; TodoList/models.py 然后我们在settings.py中注册这个TodoList\npython manage.py makemigrations python manage.py migrate 前后端 一大恶心之处就是跨域访问，我是这么解决的 前端项目中的main.js\n// main.js import axios from \u0026#39;axios\u0026#39; Vue.prototype.$axios = axios axios.defaults.baseURL = \u0026#39;http://127.0.0.1:8000/api/todo\u0026#39;; axios.defaults.headers.post[\u0026#39;Content-Type\u0026#39;] = \u0026#39;application/x-www-fromurlencodeed\u0026#39; axios.defaults.headers[\u0026#39;Content-Type\u0026#39;]=\u0026#39;application/x-www-form-urlencoded\u0026#39;; 后端项目中\nallowed_origins = [\u0026#39;http://127.0.0.1:8000\u0026#39;] origin = request.headers[\u0026#39;Origin\u0026#39;] response = JsonResponse({\u0026#39;errno\u0026#39;: 1001, \u0026#39;msg\u0026#39;: \u0026#34;请求方式错误\u0026#34;}) response[\u0026#34;Access-Control-Allow-Origin\u0026#34;] = origin return response 挺麻烦的，整了好久。好像有工具包可以来跨域访问，但我pip安装出问题了","title":"TodoList"},{"content":"源码需要改动的地方（自己做的话） tencentcloud.propeties的信息\nSMSUtils.java\napplication-dev.yml\napplication-prod.yml里的各种\n内网互通 1. 关闭本地防火墙 2. 连接到同一个WIFI 3. 查看本地IP cmd命令行输入ipconfig 192.168.10.10\n把application-dev.yml中的端口号改改，再把数据库改改\n前端代码运行 将App.vue中的serverUrl改成本机IP\n连接模拟器\nHBuilderX连接安卓模拟器 - 简书 (jianshu.com)\nUbuntu基础配置 VMWare安装，Ubuntu下载网上教程很全面了\n安装后：\n1.中文 右上角settings-\u0026gt;Region\u0026amp;Language-\u0026gt; managed install language -\u0026gt; install language -\u0026gt; chineses simplify-\u0026gt;\nRegion formats 改为汉语 -\u0026gt;apply-\u0026gt;重启-\u0026gt;settings-\u0026gt;\u0026rsquo;+\u0026rsquo;-\u0026gt;中文-\u0026gt;language-\u0026gt;汉语-\u0026gt;restart\n2.镜像源 Ubuntu 20.04换国内源 清华源 阿里源 中科大源 163源 - 知乎 (zhihu.com)\n3.复制粘贴 (99条消息) VMware Tools安装步骤（windows10）_萝北村的枫子的博客-CSDN博客_vmtools安装\n[(99条消息) VMware虚拟机的安装VMware Tools是灰色无法点击的解决方法_BluePROT的博客-CSDN博客_vm虚拟机安装tools是灰色](https://blog.csdn.net/qq_41037945/article/details/104173550?ops_request_misc=\u0026amp;request_id=\u0026amp;biz_id=102\u0026amp;utm_term=重新安装vmware tools无法点击\u0026amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-104173550.142^v11^pc_search_result_control_group,157^v12^control\u0026amp;spm=1018.2226.3001.4187)\n数据库使用 数据库数据的导出\n在MySql的bin目录下执行\nD: cd D:\\mysql-8.0.28-winx64\\bin mysqldump -uroot -p password imooc\u0026gt;C:\\Users\\15128\\Desktop\\大二下作业\\java\\java-homework\\my-version\\imooc-red-book-dev-chapter9-finished\\imooc.sql 我建了个云数据库 rm-bp12ec5b1y4n87tjtoo.mysql.rds.aliyuncs.com:3306\nuser:root\npassword:马赛克\ndatabase:imooc\nMariaDB安装（Ubuntu）其实用MySQL就好了 [(100条消息) 如何在Ubuntu上安装MariaDB_cunchi4221的博客-CSDN博客](https://blog.csdn.net/cunchi4221/article/details/107471755?ops_request_misc=\u0026amp;request_id=\u0026amp;biz_id=102\u0026amp;utm_term=ubuntu mariadb\u0026amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-107471755.142^v11^pc_search_result_control_group,157^v12^control\u0026amp;spm=1018.2226.3001.4187)\n安装yum yum的总体安装 https://blog.csdn.net/qq_38690917/article/details/115261819\n不出意外应该安装失败 https://blog.csdn.net/pingyan158/article/details/121992571\n虚拟机访问数据库的问题 https://blog.csdn.net/Gaozier/article/details/115515440\n数据库工具的引入 更改generatorConfig.xml中的配置\napplication-yml中的spring配置项下的数据源\n验证码验证 直接调用接口\n192.168.10.10:8099/sms\n腾讯云 tencent.cloud.secretId=马赛克\rtencent.cloud.secretKey=马赛克 Linux下安装Redis Redis安装运行 按上面的tools操作后可以直接拖动进来，就不需要连接SecureCRT\nhttps://blog.csdn.net/qq_39135287/article/details/83474865\nsudo -s cd /usr/local/redis-7.0.0/bin ./redis-server /usr/local/redis-7.0.0/etc/redis.conf 一定要关闭本地防火墙\n然后虚拟机改成桥接模式（括号里也打勾）\nping 192.168.10.10 ping一下主机ip看看能不能连上\n虚拟机ip 192.168.10.14不知道会不会变，redis端口号为6379\nRDM下载 见云盘\nminio下载 (99条消息) Windows中Minio的安装和使用_Viviana-0的博客-CSDN博客_windows安装minio\n下载到了D盘\n.\\minio.exe server E:\\minio 控制台 http://192.168.10.10:9000\n账号密码为minioadmin\nMongoDB 最详细的Windows平台安装MongoDB教程 - TM0831 - 博客园 (cnblogs.com)\n命令行执行\nmongod --dbpath E:\\MongoDB\\data\\db 127.0.0.1:27017\nmongod --dbpath \u0026#34;E:\\MongoDB\\data\\db\u0026#34; --logpath \u0026#34;E:\\MongoDB\\data\\log\\mongo.log\u0026#34; -install -serviceName \u0026#34;MongoDB\u0026#34; unicloud 好像用了这个就不需要民minio了呢？这样就可以少启用少部署一个服务了挺好的\n每次调试需要启动的服务 本地MySQL（开机自启） // 现在已使用云数据库，不需要了已经\nrm-bp12ec5b1y4n87tjtoo.mysql.rds.aliyuncs.com:3306 root 马赛克 模拟器\nHBuilder项目\n虚拟机开启Redis服务 //云的太贵了，算咯\nsudo -s cd /usr/local/redis-7.0.0/bin ./redis-server /usr/local/redis-7.0.0/etc/redis.conf MinIO\n在java项目目录下（其实有了unicloud就不需要minio咯）\n.\\minio.exe server E:\\minio MongoDB\n这里我设置了开机自启\n阿里云可以试用一个月服务器 实例密码\n马赛克\n远程连接密码\n马赛克\n安全组配置-》配置端口号\n马赛克\nMariaDB连接 netstat -apn |grep 3306查看MariaDB运行状态\n(101条消息) 为 MariaDB 配置远程访问权限_Y.zh的博客-CSDN博客_mariadb远程访问权限\n121.199.35.110:3306\nroot\n马赛克\nMongoDB 121.199.35.110:27017\nroot\n马赛克\nRedis cd /usr/local/redis/bin\n./redis-server redis.conf\n121.199.35.110:6379\n马赛克\nMinIO 121.199.35.110:9111\nroot\n马赛克\n项目部署 cd /home\nnohup java -jar imooc.jar \u0026gt;my.log 2\u0026gt;\u0026amp;1 \u0026amp;\n查看进程 ps -ef|grep imooc\nlsof -i:8099\n","permalink":"https://mathieulin.github.io/myblog/posts/java%E4%BD%9C%E4%B8%9A%E6%B3%A8%E6%84%8F/","summary":"源码需要改动的地方（自己做的话） tencentcloud.propeties的信息\nSMSUtils.java\napplication-dev.yml\napplication-prod.yml里的各种\n内网互通 1. 关闭本地防火墙 2. 连接到同一个WIFI 3. 查看本地IP cmd命令行输入ipconfig 192.168.10.10\n把application-dev.yml中的端口号改改，再把数据库改改\n前端代码运行 将App.vue中的serverUrl改成本机IP\n连接模拟器\nHBuilderX连接安卓模拟器 - 简书 (jianshu.com)\nUbuntu基础配置 VMWare安装，Ubuntu下载网上教程很全面了\n安装后：\n1.中文 右上角settings-\u0026gt;Region\u0026amp;Language-\u0026gt; managed install language -\u0026gt; install language -\u0026gt; chineses simplify-\u0026gt;\nRegion formats 改为汉语 -\u0026gt;apply-\u0026gt;重启-\u0026gt;settings-\u0026gt;\u0026rsquo;+\u0026rsquo;-\u0026gt;中文-\u0026gt;language-\u0026gt;汉语-\u0026gt;restart\n2.镜像源 Ubuntu 20.04换国内源 清华源 阿里源 中科大源 163源 - 知乎 (zhihu.com)\n3.复制粘贴 (99条消息) VMware Tools安装步骤（windows10）_萝北村的枫子的博客-CSDN博客_vmtools安装\n[(99条消息) VMware虚拟机的安装VMware Tools是灰色无法点击的解决方法_BluePROT的博客-CSDN博客_vm虚拟机安装tools是灰色](https://blog.csdn.net/qq_41037945/article/details/104173550?ops_request_misc=\u0026amp;request_id=\u0026amp;biz_id=102\u0026amp;utm_term=重新安装vmware tools无法点击\u0026amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-104173550.142^v11^pc_search_result_control_group,157^v12^control\u0026amp;spm=1018.2226.3001.4187)\n数据库使用 数据库数据的导出\n在MySql的bin目录下执行\nD: cd D:\\mysql-8.0.28-winx64\\bin mysqldump -uroot -p password imooc\u0026gt;C:\\Users\\15128\\Desktop\\大二下作业\\java\\java-homework\\my-version\\imooc-red-book-dev-chapter9-finished\\imooc.sql 我建了个云数据库 rm-bp12ec5b1y4n87tjtoo.","title":"仿抖音项目开发遇到的问题"},{"content":"1. vue项目的安装 1.1 依赖环境 Vue CLI 4.x 需要 Node.js v8.9 或更高版本 (推荐 v10 以上)。\n1.2 安装指令 npm install -g @vue/cli 1.3 检查指令 vue --version 1.4 创建项目 vue create frontend 1.5 运行项目 npm run serve 运行命令后可在http:localhost:8000/中看到初始化项目\n1.6 安装axios npm install axios 1.7 发送请求 比如给按钮绑定了response方法，则在该vue的export default下\nimport axios from \u0026#39;axios\u0026#39; export default { name: \u0026#39;App\u0026#39;, components: { }, methods: { response(){ Axios.get(\u0026#34;http://localhost:3000/product\u0026#34;).then(function(response){ console.log(response); })\t} } } 2.Express项目 2.1 安装Express npm install express --save 2.2 安装express应用程序生成器 npm install -g express-generator 2.3 创建名为backend的Express应用 express --view=pug backend 2.4 按照提示进行操作 cd backend npm install SET DEBUG=backend:* npm start(建议在vscode中进行这一步) 2.5 提供接口请求 routes下新建product.js var express = require(\u0026#39;express\u0026#39;); var router = express.Router(); /* GET home page. */ router.get(\u0026#39;/\u0026#39;, function(req, res, next) { var data={ code:0, data:{name:\u0026#39;aaa\u0026#39;,pwd:\u0026#39;123\u0026#39;}, isSuccess:true, msg:\u0026#34;请求成功\u0026#34; } res.json(data); }); module.exports = router; app.js设置跨域访问 示例如下：\nvar createError = require(\u0026#39;http-errors\u0026#39;); var express = require(\u0026#39;express\u0026#39;); var path = require(\u0026#39;path\u0026#39;); var cookieParser = require(\u0026#39;cookie-parser\u0026#39;); var logger = require(\u0026#39;morgan\u0026#39;); var indexRouter = require(\u0026#39;./routes/index\u0026#39;); var usersRouter = require(\u0026#39;./routes/users\u0026#39;); var productRouter = require(\u0026#39;./routes/product\u0026#39;); var app = express(); // view engine setup app.set(\u0026#39;views\u0026#39;, path.join(__dirname, \u0026#39;views\u0026#39;)); app.set(\u0026#39;view engine\u0026#39;, \u0026#39;jade\u0026#39;); app.use(logger(\u0026#39;dev\u0026#39;)); app.use(express.json()); app.use(express.urlencoded({ extended: false })); app.use(cookieParser()); app.use(express.static(path.join(__dirname, \u0026#39;public\u0026#39;))); //设置跨域访问 app.all(\u0026#39;*\u0026#39;, function (req, res, next) { res.header(\u0026#34;Access-Control-Allow-Origin\u0026#34;, \u0026#34;*\u0026#34;); res.header(\u0026#34;Access-Control-Allow-Headers\u0026#34;, \u0026#34;X-Requested-With\u0026#34;); res.header(\u0026#34;Access-Control-Allow-Methods\u0026#34;, \u0026#34;PUT,POST,GET,DELETE,OPTIONS\u0026#34;); res.header(\u0026#34;X-Powered-By\u0026#34;, \u0026#39; 3.2.1\u0026#39;) res.header(\u0026#34;Content-Type\u0026#34;, \u0026#34;application/json;charset=utf-8\u0026#34;); next(); }); app.use(\u0026#39;/\u0026#39;, indexRouter); app.use(\u0026#39;/users\u0026#39;, usersRouter); app.use(\u0026#39;/product\u0026#39;, productRouter); // catch 404 and forward to error handler app.use(function (req, res, next) { next(createError(404)); }); // error handler app.use(function (err, req, res, next) { // set locals, only providing error in development res.locals.message = err.message; res.locals.error = req.app.get(\u0026#39;env\u0026#39;) === \u0026#39;development\u0026#39; ? err : {}; // render the error page res.status(err.status || 500); res.render(\u0026#39;error\u0026#39;); }); module.exports = app; 若需提供其他接口，则只需在route下新建一个(example.)js，并且在app.js中添加下面两句 var exampleRouter = require(\u0026#39;./routes/example\u0026#39;); app.use(\u0026#39;/example\u0026#39;, exampleRouter); 2.6 运行后端 npm start 3. 交互 打开前端网站，点击按钮，然后就可以在控制台上看到请求值了\n","permalink":"https://mathieulin.github.io/myblog/posts/%E5%89%8D%E5%90%8E%E7%AB%AF/","summary":"1. vue项目的安装 1.1 依赖环境 Vue CLI 4.x 需要 Node.js v8.9 或更高版本 (推荐 v10 以上)。\n1.2 安装指令 npm install -g @vue/cli 1.3 检查指令 vue --version 1.4 创建项目 vue create frontend 1.5 运行项目 npm run serve 运行命令后可在http:localhost:8000/中看到初始化项目\n1.6 安装axios npm install axios 1.7 发送请求 比如给按钮绑定了response方法，则在该vue的export default下\nimport axios from \u0026#39;axios\u0026#39; export default { name: \u0026#39;App\u0026#39;, components: { }, methods: { response(){ Axios.get(\u0026#34;http://localhost:3000/product\u0026#34;).then(function(response){ console.log(response); })\t} } } 2.Express项目 2.1 安装Express npm install express --save 2.","title":"前后端"},{"content":"这是CTS代码 快速通过CTS 获取评测数据（读书人的事情嘛）\nString input=\u0026#34;\u0026#34;; while (true) { argStr = in.nextLine(); [+] input+=argStr; [+]\tinput+=\u0026#34;;\u0026#34;; String[] splited = argStr.split(\u0026#34;\\\\s+\u0026#34;); ...... else if (Objects.equals(splited[0], \u0026#34;QUIT\u0026#34;)){ [+]\tSystem.out.println(input);\tSystem.out.println(\u0026#34;----- Good Bye! -----\u0026#34;); System.exit(0); } 然后你就得到了\nTunakTunakTun;addLine Line13 4 Dazhongshi 28 Zhichunlu 30 Wudaokou 48 Shangdi 96 Xierqi 121 Longze 148;addLine Manchu 2 Shahe 20 Hamazhen 59 Wulongbei 150 Tangshancheng 207 Gaolimen 281 Fenghuangcheng 272 Sitaizi 430 Jiguanshan 498 Benxihu 586;addTrain K0012 Line13 22 90 7 120;addTrain G1001 Manchu 22 90 7 120 2.4 200;addTrain 00026 Line13 3 100 7 10 2.4 0;addUser xiaoyangren F 041401700330;addUser xiaoyinren M 054502770201;addUser xiaoxuesheng F 016103550800 2;importCert cert.csv;login 041401700330 xiaoyangren;buyTicket K0012 Dazhongshi Zhichunlu 1A 50;listOrder;logout;importCert cert2.csv;login 041401700330 xiaoyangren;buyTicket G1001 Shahe Gaolimen SB 50;listOrder;cancelOrder G1001 Shahe Gaolimen SB 49;listTrain Manchu;listOrder;logout;login 016103550800 xiaoxuesheng;buyTicket G1001 Shahe Gaolimen SB 1;buyTicket G1001 Shahe Gaolimen SB 3;payOrder;checkBalance;rechargeBalance 5000;payOrder;checkBalance;listOrder;logout;login 054502770201 xiaoyinren;buyTicket G1001 Shahe Gaolimen SB 12;listOrder;logout;QUIT; 然后运行\npublic class Transform { public static void main(String[] args){ String input = \u0026#34;\u0026#34; # 上面得到的input String[] commands = input.split(\u0026#34;;\u0026#34;); int i; for(i=0;i\u0026lt; commands.length;i++){ System.out.println(commands[i]); } } } TunakTunakTun addLine Line13 4 Dazhongshi 28 Zhichunlu 30 Wudaokou 48 Shangdi 96 Xierqi 121 Longze 148 addLine Manchu 2 Shahe 20 Hamazhen 59 Wulongbei 150 Tangshancheng 207 Gaolimen 281 Fenghuangcheng 272 Sitaizi 430 Jiguanshan 498 Benxihu 586 addTrain K0012 Line13 22 90 7 120 addTrain G1001 Manchu 22 90 7 120 2.4 200 addTrain 00026 Line13 3 100 7 10 2.4 0 addUser xiaoyangren F 041401700330 addUser xiaoyinren M 054502770201 addUser xiaoxuesheng F 016103550800 2 importCert cert.csv login 041401700330 xiaoyangren buyTicket K0012 Dazhongshi Zhichunlu 1A 50 listOrder logout importCert cert2.csv login 041401700330 xiaoyangren buyTicket G1001 Shahe Gaolimen SB 50 listOrder cancelOrder G1001 Shahe Gaolimen SB 49 listTrain Manchu listOrder logout login 016103550800 xiaoxuesheng buyTicket G1001 Shahe Gaolimen SB 1 buyTicket G1001 Shahe Gaolimen SB 3 payOrder checkBalance rechargeBalance 5000 payOrder checkBalance listOrder logout login 054502770201 xiaoyinren buyTicket G1001 Shahe Gaolimen SB 12 listOrder logout QUIT import java.io.*; import java.util.*; import static java.lang.Math.abs; public class Test { static boolean isLogin = false; public static void main(String args[]) throws IOException { Scanner in = new Scanner(System.in); String argStr; Vector\u0026lt;User\u0026gt; userList = new Vector\u0026lt;User\u0026gt;(); Vector\u0026lt;Line\u0026gt; lineList = new Vector\u0026lt;Line\u0026gt;(); Vector\u0026lt;Train\u0026gt; trainList = new Vector\u0026lt;Train\u0026gt;(); Vector stationList = new Vector(); HashMap\u0026lt;String, Boolean\u0026gt; certMsg = new HashMap\u0026lt;String, Boolean\u0026gt;(); User user = new User(); boolean isAdmin = false; while (true) { argStr = in.nextLine(); String[] splited = argStr.split(\u0026#34;\\\\s+\u0026#34;); if(Objects.equals(splited[0], \u0026#34;addUser\u0026#34;)){ addUser(userList, splited); } else if (Objects.equals(splited[0], \u0026#34;QUIT\u0026#34;)){ System.out.println(\u0026#34;----- Good Bye! -----\u0026#34;); System.exit(0); } else if(Objects.equals(splited[0], \u0026#34;login\u0026#34;)){ int index = login(splited, isLogin, userList); if( index != -1){ isLogin = true; user = userList.get(index); } } else if(Objects.equals(splited[0], \u0026#34;logout\u0026#34;)){ if(logout(splited, isLogin)){ isLogin = false; user = null; } } else if (Objects.equals(splited[0], \u0026#34;TunakTunakTun\u0026#34;)){ if(!isAdmin){ isAdmin = true; System.out.println(\u0026#34;DuluDulu\u0026#34;); } else { System.out.println(\u0026#34;WanNiBa\u0026#34;); } } else if (Objects.equals(splited[0], \u0026#34;NutKanutKanut\u0026#34;)){ if(isAdmin){ isAdmin = false; System.out.println(\u0026#34;DaDaDa\u0026#34;); } else { System.out.println(\u0026#34;WanNiBa\u0026#34;); } } else{ if(Objects.equals(splited[0], \u0026#34;addLine\u0026#34;)){ if(isAdmin){ addLine(lineList, splited); } else { System.out.println(\u0026#34;Command does not exist\u0026#34;); } } else if(Objects.equals(splited[0], \u0026#34;delLine\u0026#34;)){ if(isAdmin){ delLine(lineList, splited); } else { System.out.println(\u0026#34;Command does not exist\u0026#34;); } } else if(Objects.equals(splited[0], \u0026#34;addStation\u0026#34;)){ if(isAdmin){ addStation(lineList, splited); } else { System.out.println(\u0026#34;Command does not exist\u0026#34;); } } else if(Objects.equals(splited[0], \u0026#34;delStation\u0026#34;)){ if(isAdmin){ delStation(lineList, splited); } else { System.out.println(\u0026#34;Command does not exist\u0026#34;); } } else if(Objects.equals(splited[0], \u0026#34;lineInfo\u0026#34;)){ lineInfo(lineList, splited); } else if(Objects.equals(splited[0], \u0026#34;listLine\u0026#34;)){ if(splited.length == 1){ listLine(lineList); } else{ System.out.println(\u0026#34;Arguments illegal\u0026#34;); continue; } } else if(Objects.equals(splited[0], \u0026#34;addTrain\u0026#34;)){ if(isAdmin){ addTrain(lineList, trainList, splited); } else { System.out.println(\u0026#34;Command does not exist\u0026#34;); } } else if(Objects.equals(splited[0], \u0026#34;delTrain\u0026#34;)){ if(isAdmin){ delTrain(lineList, trainList, splited); } else { System.out.println(\u0026#34;Command does not exist\u0026#34;); } } else if(Objects.equals(splited[0], \u0026#34;checkTicket\u0026#34;)){ if(user.getAdmin() == false) { checkTicket(lineList, trainList, splited); } else{ System.out.println(\u0026#34;Command does not exist\u0026#34;); } } else if(Objects.equals(splited[0], \u0026#34;listTrain\u0026#34;)){ listTrain(lineList, trainList, splited); } else if(Objects.equals(splited[0], \u0026#34;buyTicket\u0026#34;)){ buyTicket(user, lineList, trainList, splited, isLogin); } else if(Objects.equals(splited[0], \u0026#34;listOrder\u0026#34;)){ if(splited.length == 1){ listOrder(user, isLogin); } else{ System.out.println(\u0026#34;Arguments illegal\u0026#34;); continue; } } else if(Objects.equals(splited[0], \u0026#34;rechargeBalance\u0026#34;)){ if(splited.length == 2){ rechargeBalance(user, isLogin, Double.parseDouble(splited[1])); } else{ System.out.println(\u0026#34;Arguments illegal\u0026#34;); continue; } } else if(Objects.equals(splited[0], \u0026#34;checkBalance\u0026#34;)){ if(splited.length == 1){ checkBalance(user, isLogin); } else{ System.out.println(\u0026#34;Arguments illegal\u0026#34;); continue; } } else if(Objects.equals(splited[0], \u0026#34;cancelOrder\u0026#34;)){ cancelOrder(user, lineList, trainList, splited, isLogin); } else if(Objects.equals(splited[0], \u0026#34;payOrder\u0026#34;)){ payOrder(user, splited, isLogin); } else if(Objects.equals(splited[0], \u0026#34;importCert\u0026#34;)){ if(isAdmin){ certMsg = importCert(certMsg, userList, splited); } else { System.out.println(\u0026#34;Command does not exist\u0026#34;); } } else { System.out.println(\u0026#34;Command does not exist\u0026#34;); } } } } private static HashMap\u0026lt;String, Boolean\u0026gt; importCert(HashMap\u0026lt;String, Boolean\u0026gt; certMsg, Vector\u0026lt;User\u0026gt; userList, String[] args) throws IOException { if(args.length != 2) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return certMsg; } try{ certMsg = Cert.read(certMsg, args[1], userList); } catch (IOException e){ throw new RuntimeException(); } return certMsg; } private static void payOrder(User user, String[] args, boolean isLogin) { if(args.length != 1) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } if(isLogin == false){ System.out.println(\u0026#34;Please login first\u0026#34;); return; } Vector\u0026lt;Order\u0026gt; orders = user.getOrders(); if(orders.size() == 0) { System.out.println(\u0026#34;No order\u0026#34;); } int discountNum; if(isStudent(user)){ Student student = (Student)user; discountNum = student.getDiscountNum(); } else { discountNum = 0 ; } double sum = 0; int orders_size = orders.size()-1; for(int i=orders_size;i\u0026gt;=0;i--){ Order order = orders.get(i); if(order.isPaid()){ continue; } if(discountNum \u0026gt;= order.getSeatNum()){ sum += order.getSum()*0.05; discountNum -= order.getSeatNum(); } else{ double single = order.getSingle(); sum += single*discountNum*0.05 + (order.getSeatNum()-discountNum)*single; discountNum = 0; } } if(sum\u0026lt;=user.getBalance()){ user.setOrders(orders); double balance = user.getBalance()-sum; user.setBalance(balance); for(int i=orders_size;i\u0026gt;=0;i--){ orders.get(i).setPaid(true); } System.out.println(\u0026#34;Payment success\u0026#34;); return; } else{ System.out.println(\u0026#34;Balance does not enough\u0026#34;); return; } } private static boolean isStudent(User user){ try { Student student = (Student) user; return true; } catch (Exception e) { return false; } } private static void cancelOrder(User user, Vector\u0026lt;Line\u0026gt; lineList, Vector\u0026lt;Train\u0026gt; trainList, String[] args, boolean isLogin) { if(args.length \u0026lt;= 5) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } if(isLogin == false){ System.out.println(\u0026#34;Please login first\u0026#34;); return; } String trainNum = args[1]; int trainIndex = trainExist(trainList, trainNum); if( trainIndex == -1){ System.out.println(\u0026#34;Train does not exist\u0026#34;); return; } Train train = trainList.get(trainIndex); Vector\u0026lt;Integer\u0026gt; ticket = train.getTicketNum(); Vector\u0026lt;Order\u0026gt; orders = user.getOrders(); int num = Integer.parseInt(args[5]); int sum = 0; int orders_size = orders.size()-1; for(int i=orders_size;i\u0026gt;=0;i--){ Order order = orders.get(i); if(order.isPaid()){ continue; } if(Objects.equals(args[1], order.getTrainNum())\u0026amp;\u0026amp;Objects.equals(args[2], order.getBegin())\u0026amp;\u0026amp;Objects.equals(args[3], order.getDestination())\u0026amp;\u0026amp;Objects.equals(args[4], order.getSeat())){ sum++; if(num\u0026lt;order.getSeatNum()){ int seatNum = order.getSeatNum() - num; order.setSeatNum(seatNum); order.setSum(seatNum * order.getSingle()); user.setOrders(orders); System.out.println(\u0026#34;Cancel success\u0026#34;); if(Objects.equals(args[4], \u0026#34;CC\u0026#34;) || Objects.equals(args[4], \u0026#34;SC\u0026#34;) || Objects.equals(args[4], \u0026#34;1A\u0026#34;)){ ticket.set(0, ticket.get(0) + num); train.setTicketNum(ticket); } else if(Objects.equals(args[4], \u0026#34;HC\u0026#34;) || (Objects.equals(args[4], \u0026#34;SB\u0026#34;) \u0026amp;\u0026amp; trainNum.charAt(0) == \u0026#39;0\u0026#39;)|| Objects.equals(args[4], \u0026#34;2A\u0026#34;)){ ticket.set(1, ticket.get(1) + num); train.setTicketNum(ticket); } else if(Objects.equals(args[4], \u0026#34;GG\u0026#34;) || (Objects.equals(args[4], \u0026#34;SB\u0026#34;) \u0026amp;\u0026amp; trainNum.charAt(0) == \u0026#39;G\u0026#39;)){ ticket.set(2, ticket.get(2) + num); train.setTicketNum(ticket); } return; } else if(num == order.getSeatNum()){ orders.remove(i); user.setOrders(orders); System.out.println(\u0026#34;Cancel success\u0026#34;); if(Objects.equals(args[4], \u0026#34;CC\u0026#34;) || Objects.equals(args[4], \u0026#34;SC\u0026#34;) || Objects.equals(args[4], \u0026#34;1A\u0026#34;)){ ticket.set(0, ticket.get(0) + num); train.setTicketNum(ticket); } else if(Objects.equals(args[4], \u0026#34;HC\u0026#34;) || (Objects.equals(args[4], \u0026#34;SB\u0026#34;) \u0026amp;\u0026amp; trainNum.charAt(0) == \u0026#39;0\u0026#39;)|| Objects.equals(args[4], \u0026#34;2A\u0026#34;)){ ticket.set(1, ticket.get(1) + num); train.setTicketNum(ticket); } else if(Objects.equals(args[4], \u0026#34;GG\u0026#34;) || (Objects.equals(args[4], \u0026#34;SB\u0026#34;) \u0026amp;\u0026amp; trainNum.charAt(0) == \u0026#39;G\u0026#39;)){ ticket.set(2, ticket.get(2) + num); train.setTicketNum(ticket); } return; } else{ num -= order.getSeatNum(); if(Objects.equals(args[4], \u0026#34;CC\u0026#34;) || Objects.equals(args[4], \u0026#34;SC\u0026#34;) || Objects.equals(args[4], \u0026#34;1A\u0026#34;)){ ticket.set(0, ticket.get(0) + order.getSeatNum()); train.setTicketNum(ticket); } else if(Objects.equals(args[4], \u0026#34;HC\u0026#34;) || (Objects.equals(args[4], \u0026#34;SB\u0026#34;) \u0026amp;\u0026amp; trainNum.charAt(0) == \u0026#39;0\u0026#39;)|| Objects.equals(args[4], \u0026#34;2A\u0026#34;)){ ticket.set(1, ticket.get(1) + order.getSeatNum()); train.setTicketNum(ticket); } else if(Objects.equals(args[4], \u0026#34;GG\u0026#34;) || (Objects.equals(args[4], \u0026#34;SB\u0026#34;) \u0026amp;\u0026amp; trainNum.charAt(0) == \u0026#39;G\u0026#39;)){ ticket.set(2, ticket.get(2) + order.getSeatNum()); train.setTicketNum(ticket); } orders.remove(i); } } } if(sum == 0){ System.out.println(\u0026#34;No such Record\u0026#34;); return; } else{ System.out.println(\u0026#34;No enough orders\u0026#34;); return; } } private static void checkBalance(User user, boolean isLogin) { if (!isLogin) { System.out.println(\u0026#34;Please login first\u0026#34;); return; } System.out.format(\u0026#34;UserName:%s\\nBalance:%.2f\\n\u0026#34;, user.getName(), user.getBalance()); } private static void rechargeBalance(User user, boolean isLogin, double num) { if(!isLogin){ System.out.println(\u0026#34;Please login first\u0026#34;); return; } if(num\u0026lt;0){ System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } double sum = num + user.getBalance(); user.setBalance(sum); System.out.println(\u0026#34;Recharge Success\u0026#34;); return; } private static void listOrder(User user, boolean isLogin) { if(!isLogin){ System.out.println(\u0026#34;Please login first\u0026#34;); return; } Vector\u0026lt;Order\u0026gt; orders = user.getOrders(); int i; if(orders.isEmpty()){ System.out.println(\u0026#34;No order\u0026#34;); return; } for(i=orders.size()-1;i\u0026gt;=0;i--){ Order order = orders.get(i); System.out.format(\u0026#34;[%s: %s-\u0026gt;%s] seat:%s num:%d price:%.2f paid:%c\\n\u0026#34;,order.getTrainNum(),order.getBegin(),order.getDestination(),order.getSeat(),order.getSeatNum(),order.getSum(),(order.isPaid()?\u0026#39;T\u0026#39;:\u0026#39;F\u0026#39;)); } } private static void buyTicket(User user, Vector\u0026lt;Line\u0026gt; lineList, Vector\u0026lt;Train\u0026gt; trainList, String[] args, boolean isLogin) { if(args.length \u0026lt;= 5) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } if(isLogin == false){ System.out.println(\u0026#34;Please login first\u0026#34;); return; } String trainNum = args[1]; int trainIndex = trainExist(trainList, trainNum); if( trainIndex == -1){ System.out.println(\u0026#34;Train does not exist\u0026#34;); return; } Train train = trainList.get(trainIndex); String lineName= train.getLine(); int lineIndex = findLine(lineList, lineName); Line line = lineList.get(lineIndex); int beginIndex = stationExist(line, args[2]); int destIndex = stationExist(line, args[3]); if(beginIndex == -1 || destIndex == -1){ System.out.println(\u0026#34;Station does not exist\u0026#34;); return; } Vector\u0026lt;Integer\u0026gt; mileage = line.getStationMileage(); int distance = abs(mileage.get(destIndex) - mileage.get(beginIndex)); Vector\u0026lt;Integer\u0026gt; ticket = train.getTicketNum(); Vector\u0026lt;Double\u0026gt; price = train.getTicketPrice(); int rest = 0; double prices = 0; int num = 100000; if(isInt(args[5])) { num = Integer.valueOf(args[5]); } if(trainNum.charAt(0) == \u0026#39;0\u0026#39;){ if(Objects.equals(args[4], \u0026#34;CC\u0026#34;)){ rest = ticket.get(0); prices = price.get(0); if(rest\u0026gt;num){ ticket.set(0, rest - num); train.setTicketNum(ticket); } } else if(Objects.equals(args[4], \u0026#34;SB\u0026#34;)){ rest = ticket.get(1); prices = price.get(1); if(rest\u0026gt;num){ ticket.set(1, rest - num); train.setTicketNum(ticket); } } else if(Objects.equals(args[4], \u0026#34;GG\u0026#34;)){ rest = ticket.get(2); prices = price.get(2); if(rest\u0026gt;num){ ticket.set(2, rest - num); train.setTicketNum(ticket); } } else{ System.out.println(\u0026#34;Seat does not match\u0026#34;); return; } } else if(trainNum.charAt(0) == \u0026#39;G\u0026#39;){ if(Objects.equals(args[4], \u0026#34;SC\u0026#34;)){ rest = ticket.get(0); prices = price.get(0); if(rest\u0026gt;num){ ticket.set(0, rest - num); train.setTicketNum(ticket); } } else if(Objects.equals(args[4], \u0026#34;HC\u0026#34;)){ rest = ticket.get(1); prices = price.get(1); if(rest\u0026gt;num){ ticket.set(1, rest - num); train.setTicketNum(ticket); } } else if(Objects.equals(args[4], \u0026#34;SB\u0026#34;)){ rest = ticket.get(2); prices = price.get(2); if(rest\u0026gt;num){ ticket.set(2, rest - num); train.setTicketNum(ticket); } } else{ System.out.println(\u0026#34;Seat does not match\u0026#34;); return; } } else if(trainNum.charAt(0) == \u0026#39;K\u0026#39;){ if(Objects.equals(args[4], \u0026#34;1A\u0026#34;)){ if (user.isCert()){ System.out.println(\u0026#34;Cert illegal\u0026#34;); return; } rest = ticket.get(0); prices = price.get(0); if(rest\u0026gt;num){ ticket.set(0, rest - num); train.setTicketNum(ticket); } } else if(Objects.equals(args[4], \u0026#34;2A\u0026#34;)){ if (user.isCert()){ System.out.println(\u0026#34;Cert illegal\u0026#34;); return; } rest = ticket.get(1); prices = price.get(1); if(rest\u0026gt;num){ ticket.set(1, rest - num); train.setTicketNum(ticket); } } else{ System.out.println(\u0026#34;Seat does not match\u0026#34;); return; } } if(!isInt(args[5]) || Integer.valueOf(args[5])\u0026lt;=0){ System.out.println(\u0026#34;Ticket number illegal\u0026#34;); return; } else{ if(num \u0026gt; rest){ System.out.println(\u0026#34;Ticket does not enough\u0026#34;); return; } } Vector\u0026lt;Order\u0026gt; orders= user.getOrders(); Order order = new Order(); order.setTrainNum(args[1]); order.setBegin(args[2]); order.setDestination(args[3]); order.setSeat(args[4]); order.setSeatNum(num); order.setSingle(prices*distance); order.setSum(num*prices*distance); orders.addElement(order); user.setOrders(orders); System.out.println(\u0026#34;Thanks for your order\u0026#34;); return; } private static boolean logout(String[] args, boolean isLogin){ if(args.length!=1){ System.out.println(\u0026#34;Arguments illegal\u0026#34;); return false; } if(isLogin) { System.out.println(\u0026#34;Logout success\u0026#34;); return true; } else{ System.out.println(\u0026#34;No user has logged in\u0026#34;); return false; } } private static int login(String[] args, boolean isLogin, Vector\u0026lt;User\u0026gt; userList){ if(args.length!=3){ System.out.println(\u0026#34;Arguments illegal\u0026#34;); return -1; } else if(isLogin == true){ System.out.println(\u0026#34;You have logged in\u0026#34;); return -1; } String card = args[1]; String name = args[2]; boolean isExist = false; int i; for(i=0;i\u0026lt; userList.size();i++){ if(Objects.equals(userList.get(i).getAadhaar(), card)){ isExist = true; break; } } if(!isExist){ System.out.println(\u0026#34;User does not exist\u0026#34;); return -1; } if(!Objects.equals(userList.get(i).getName(), name)){ System.out.println(\u0026#34;Wrong name\u0026#34;); return -1; } System.out.println(\u0026#34;Login success\u0026#34;); return i; } private static void listTrain(Vector\u0026lt;Line\u0026gt; lineList, Vector\u0026lt;Train\u0026gt; trainList, String[] args) { if(args.length == 1) { int i; int trainInLine = 1; for(i=0;i\u0026lt;trainList.size();i++){ Train train = trainList.get(i); Vector\u0026lt;Double\u0026gt; price = train.getTicketPrice(); Vector\u0026lt;Integer\u0026gt; ticket = train.getTicketNum(); String trainNum = train.getTrainNum(); if(trainNum.charAt(0) == \u0026#39;0\u0026#39;){ System.out.format(\u0026#34;[%d] %s: %s [CC]%.2f:%d [SB]%.2f:%d [GG]%.2f:%d\\n\u0026#34;,trainInLine, trainNum, train.getLine(), price.get(0), ticket.get(0), price.get(1), ticket.get(1), price.get(2), ticket.get(2)); } else if(trainNum.charAt(0) == \u0026#39;G\u0026#39;){ System.out.format(\u0026#34;[%d] %s: %s [SC]%.2f:%d [HC]%.2f:%d [SB]%.2f:%d\\n\u0026#34;,trainInLine, trainNum, train.getLine(), price.get(0), ticket.get(0), price.get(1), ticket.get(1), price.get(2), ticket.get(2)); } else if(trainNum.charAt(0) == \u0026#39;K\u0026#39;){ System.out.format(\u0026#34;[%d] %s: %s [1A]%.2f:%d [2A]%.2f:%d\\n\u0026#34;,trainInLine, trainNum, train.getLine(), price.get(0), ticket.get(0), price.get(1), ticket.get(1)); } trainInLine++; } if(trainInLine == 1) { System.out.println(\u0026#34;No Trains\u0026#34;); } return; } String lineNum = args[1]; if(lineExist(lineList, lineNum) == -1) { System.out.println(\u0026#34;Line does not exist\u0026#34;); return; } int i; int trainInLine = 1; for(i=0;i\u0026lt;trainList.size();i++){ Train train = trainList.get(i); Vector\u0026lt;Double\u0026gt; price = train.getTicketPrice(); Vector\u0026lt;Integer\u0026gt; ticket = train.getTicketNum(); String trainNum = train.getTrainNum(); if(Objects.equals(train.getLine(), lineNum)){ if(trainNum.charAt(0) == \u0026#39;0\u0026#39;){ System.out.format(\u0026#34;[%d] %s: %s [CC]%.2f:%d [SB]%.2f:%d [GG]%.2f:%d\\n\u0026#34;,trainInLine, trainNum, lineNum, price.get(0), ticket.get(0), price.get(1), ticket.get(1), price.get(2), ticket.get(2)); } else if(trainNum.charAt(0) == \u0026#39;G\u0026#39;){ System.out.format(\u0026#34;[%d] %s: %s [SC]%.2f:%d [HC]%.2f:%d [SB]%.2f:%d\\n\u0026#34;,trainInLine, trainNum, lineNum, price.get(0), ticket.get(0), price.get(1), ticket.get(1), price.get(2), ticket.get(2)); } else if(trainNum.charAt(0) == \u0026#39;K\u0026#39;){ System.out.format(\u0026#34;[%d] %s: %s [1A]%.2f:%d [2A]%.2f:%d\\n\u0026#34;,trainInLine, trainNum, lineNum, price.get(0), ticket.get(0), price.get(1), ticket.get(1)); } trainInLine++; } } if(trainInLine == 1) { System.out.println(\u0026#34;No Trains\u0026#34;); } } private static int lineExist(Vector\u0026lt;Line\u0026gt; lineList, String lineNum){ int i; for(i=0;i\u0026lt;lineList.size();i++){ if(Objects.equals(lineList.get(i).getLine(), lineNum)){ return i; } } return -1; } private static void checkTicket(Vector\u0026lt;Line\u0026gt; lineList, Vector\u0026lt;Train\u0026gt; trainList, String[] args) { if(args.length \u0026lt; 5) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } String trainNum = args[1]; if(trainNum.length() \u0026lt; 5){ System.out.println(\u0026#34;Train serial illegal\u0026#34;); return; } if(!(isNum(trainNum.charAt(1)) \u0026amp;\u0026amp; isNum(trainNum.charAt(2)) \u0026amp;\u0026amp; isNum(trainNum.charAt(3)) \u0026amp;\u0026amp; isNum(trainNum.charAt(4)))){ System.out.println(\u0026#34;Train serial illegal\u0026#34;); return; } int trainIndex = trainExist(trainList, trainNum); if( trainIndex == -1){ System.out.println(\u0026#34;Train serial does not exist\u0026#34;); return; } Train train = trainList.get(trainIndex); String lineName= train.getLine(); int lineIndex = findLine(lineList, lineName); Line line = lineList.get(lineIndex); int beginIndex = stationExist(line, args[2]); int destIndex = stationExist(line, args[3]); if(beginIndex == -1 || destIndex == -1){ System.out.println(\u0026#34;Station does not exist\u0026#34;); return; } Vector\u0026lt;Integer\u0026gt; mileage = line.getStationMileage(); int distance = abs(mileage.get(destIndex) - mileage.get(beginIndex)); Vector\u0026lt;Integer\u0026gt; ticket = train.getTicketNum(); Vector\u0026lt;Double\u0026gt; price = train.getTicketPrice(); if(trainNum.charAt(0) == \u0026#39;0\u0026#39;){ if(Objects.equals(args[4], \u0026#34;CC\u0026#34;)){ System.out.format(\u0026#34;[%s: %s-\u0026gt;%s] seat:CC remain:%d distance:%d price:%.2f\\n\u0026#34;,trainNum, args[2], args[3], ticket.get(0), distance, distance*price.get(0)); } else if(Objects.equals(args[4], \u0026#34;SB\u0026#34;)){ System.out.format(\u0026#34;[%s: %s-\u0026gt;%s] seat:SB remain:%d distance:%d price:%.2f\\n\u0026#34;,trainNum, args[2], args[3], ticket.get(1), distance, distance*price.get(1)); } else if(Objects.equals(args[4], \u0026#34;GG\u0026#34;)){ System.out.format(\u0026#34;[%s: %s-\u0026gt;%s] seat:GG remain:%d distance:%d price:%.2f\\n\u0026#34;,trainNum, args[2], args[3], ticket.get(2), distance, distance*price.get(2)); } else{ System.out.println(\u0026#34;Seat does not match\u0026#34;); return; } } else if(trainNum.charAt(0) == \u0026#39;G\u0026#39;){ if(Objects.equals(args[4], \u0026#34;SC\u0026#34;)){ System.out.format(\u0026#34;[%s: %s-\u0026gt;%s] seat:SC remain:%d distance:%d price:%.2f\\n\u0026#34;,trainNum, args[2], args[3], ticket.get(0), distance, distance*price.get(0)); } else if(Objects.equals(args[4], \u0026#34;HC\u0026#34;)){ System.out.format(\u0026#34;[%s: %s-\u0026gt;%s] seat:HC remain:%d distance:%d price:%.2f\\n\u0026#34;,trainNum, args[2], args[3], ticket.get(1), distance, distance*price.get(1)); } else if(Objects.equals(args[4], \u0026#34;SB\u0026#34;)){ System.out.format(\u0026#34;[%s: %s-\u0026gt;%s] seat:SB remain:%d distance:%d price:%.2f\\n\u0026#34;,trainNum, args[2], args[3], ticket.get(2), distance, distance*price.get(2)); } else{ System.out.println(\u0026#34;Seat does not match\u0026#34;); return; } } else if(trainNum.charAt(0) == \u0026#39;K\u0026#39;){ if(Objects.equals(args[4], \u0026#34;1A\u0026#34;)){ System.out.format(\u0026#34;[%s: %s-\u0026gt;%s] seat:1A remain:%d distance:%d price:%.2f\\n\u0026#34;,trainNum, args[2], args[3], ticket.get(0), distance, distance*price.get(0)); } else if(Objects.equals(args[4], \u0026#34;2A\u0026#34;)){ System.out.format(\u0026#34;[%s: %s-\u0026gt;%s] seat:2A remain:%d distance:%d price:%.2f\\n\u0026#34;,trainNum, args[2], args[3], ticket.get(1), distance, distance*price.get(1)); } else{ System.out.println(\u0026#34;Seat does not match\u0026#34;); return; } } } private static void delTrain(Vector\u0026lt;Line\u0026gt; lineList, Vector\u0026lt;Train\u0026gt; trainList, String[] args) { if(args.length \u0026lt; 2) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } String trainNum = args[1]; int exist = trainExist(trainList, trainNum); if(exist== -1){ System.out.println(\u0026#34;Train does not exist\u0026#34;); return; } else{ Train train = trainList.get(exist); String lineNum = train.getLine(); int lineIndex = lineExist(lineList, lineNum); Line line = lineList.get(lineIndex); int used = line.getUsedCapacity(); used--; line.setUsedCapacity(used); trainList.remove(exist); System.out.println(\u0026#34;Del Train Success\u0026#34;); } } private static int checkTrainSerial(String trainNum, Train train, int num){ int len = trainNum.length(); if(len!=5){ System.out.println(\u0026#34;Train serial illegal\u0026#34;); return 0; } if(!(isNum(trainNum.charAt(1)) \u0026amp;\u0026amp; isNum(trainNum.charAt(2)) \u0026amp;\u0026amp; isNum(trainNum.charAt(3)) \u0026amp;\u0026amp; isNum(trainNum.charAt(4)))){ System.out.println(\u0026#34;Train serial illegal\u0026#34;); return 0; } if(num == 7) { if(trainNum.charAt(0) == \u0026#39;K\u0026#39;){ train.setTrainType(\u0026#34;Koya\u0026#34;); } else if(trainNum.charAt(0) == \u0026#39;0\u0026#39;||trainNum.charAt(0) == \u0026#39;G\u0026#39;){ System.out.println(\u0026#34;Arguments illegal\u0026#34;); return 0; } else{ System.out.println(\u0026#34;Train serial illegal\u0026#34;); return 0; } } else if (num == 9) { if (trainNum.charAt(0) == \u0026#39;0\u0026#39;) { train.setTrainType(\u0026#34;Normal\u0026#34;); } else if (trainNum.charAt(0) == \u0026#39;G\u0026#39;) { train.setTrainType(\u0026#34;Gatimaan\u0026#34;); } else if(trainNum.charAt(0) == \u0026#39;K\u0026#39;){ System.out.println(\u0026#34;Arguments illegal\u0026#34;); return 0; }else { System.out.println(\u0026#34;Train serial illegal\u0026#34;); return 0; } } return 1; } private static void addTrain(Vector\u0026lt;Line\u0026gt; lineList, Vector\u0026lt;Train\u0026gt; trainList, String[] args) { int num = args.length; if(num!=7 \u0026amp;\u0026amp; num!= 9) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } String trainNum = args[1]; Train train = new Train(); if(checkTrainSerial(trainNum, train, num) == 0){ return; } if(trainExist(trainList, trainNum) != -1){ System.out.println(\u0026#34;Train serial duplicate\u0026#34;); return; } train.setTrainNum(trainNum); String lineName = args[2]; int i = findLine(lineList, lineName); if(i == -1){ System.out.println(\u0026#34;Line illegal\u0026#34;); return; } train.setLine(lineName); Line line = lineList.get(i); int used = line.getUsedCapacity(); int capacity = line.getCapacity(); if(used\u0026gt;=capacity){ System.out.println(\u0026#34;Line illegal\u0026#34;); return; } Vector\u0026lt;Double\u0026gt; ticketPrice = train.getTicketPrice(); if(!(isDouble(args[3]) \u0026amp;\u0026amp; isDouble(args[5]))){ System.out.println(\u0026#34;Price illegal\u0026#34;); return; } if(Double.valueOf(args[3])\u0026lt;0 || Double.valueOf(args[5])\u0026lt;0){ System.out.println(\u0026#34;Price illegal\u0026#34;); return; } ticketPrice.addElement(Double.valueOf(args[3])); ticketPrice.addElement(Double.valueOf(args[5])); train.setTicketPrice(ticketPrice); if(num == 9) { if (!isDouble(args[7])) { System.out.println(\u0026#34;Price illegal\u0026#34;); return; } if (Double.valueOf(args[7]) \u0026lt; 0) { System.out.println(\u0026#34;Price illegal\u0026#34;); return; } ticketPrice = train.getTicketPrice(); ticketPrice.addElement(Double.valueOf(args[7])); train.setTicketPrice(ticketPrice); } if(!(isInt(args[4]) \u0026amp;\u0026amp; isInt(args[6]))){ System.out.println(\u0026#34;Ticket num illegal\u0026#34;); return; } Vector\u0026lt;Integer\u0026gt; ticketNum = train.getTicketNum(); if(Integer.valueOf(args[4])\u0026lt;0 || Integer.valueOf(args[6])\u0026lt;0){ System.out.println(\u0026#34;Ticket num illegal\u0026#34;); return; } ticketNum.addElement(Integer.valueOf(args[4])); ticketNum.addElement(Integer.valueOf(args[6])); train.setTicketNum(ticketNum); if (num == 9){ if(!isInt(args[8])){ System.out.println(\u0026#34;Ticket num illegal\u0026#34;); return; } if(Integer.valueOf(args[8])\u0026lt;0){ System.out.println(\u0026#34;Ticket num illegal\u0026#34;); return; } ticketNum = train.getTicketNum(); ticketNum.addElement(Integer.valueOf(args[8])); train.setTicketNum(ticketNum); } used++; line.setUsedCapacity(used); // 按列车号添加 if(trainList.isEmpty()){ trainList.addElement(train); System.out.println(\u0026#34;Add Train Success\u0026#34;); return; } for(i=0;i\u0026lt;trainList.size();i++){ Train train2 = trainList.get(i); String train2Num = train2.getTrainNum(); if(trainNum.charAt(0)\u0026gt;train2Num.charAt(0)){ trainList.add(i, train); break; } else if(trainNum.charAt(0)\u0026lt;train2Num.charAt(0)){ continue; } else if(trainNum.compareTo(train2Num)\u0026lt;0){ trainList.add(i, train); break; } } if(i==trainList.size()){ trainList.add(i, train); } System.out.println(\u0026#34;Add Train Success\u0026#34;); } private static int trainExist(Vector\u0026lt;Train\u0026gt; trainList, String trainNum) { for (int i = 0; i \u0026lt; trainList.size(); i++) { Train train = trainList.get(i); if(Objects.equals(train.getTrainNum(), trainNum)){ return i; } } return -1; } private static boolean isNum(char charAt) { if(charAt\u0026gt;=\u0026#39;0\u0026#39;\u0026amp;\u0026amp;charAt\u0026lt;=\u0026#39;9\u0026#39;) { return true; } else { return false; } } private static void listLine(Vector\u0026lt;Line\u0026gt; lineList){ int i; if(lineList.isEmpty()){ System.out.println(\u0026#34;No Lines\u0026#34;); return; } for(i=0;i\u0026lt;lineList.size();i++){ Line line = lineList.get(i); line.toString(i+1); } } private static void lineInfo(Vector\u0026lt;Line\u0026gt; lineList, String[] args) { if(args.length \u0026lt; 2) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } int index = findLine(lineList, args[1]); if( index == -1){ System.out.println(\u0026#34;Line does not exist\u0026#34;); } else{ lineList.get(index).toString(); } } private static void addStation(Vector\u0026lt;Line\u0026gt; lineList, String[] args) { if(args.length \u0026lt; 4) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } if(!isInt(args[3])){ System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } if(Integer.valueOf(args[3])\u0026lt;0){ System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } int i = findLine(lineList, args[1]); int len = args.length; if(i == -1){ System.out.println(\u0026#34;Line does not exist\u0026#34;); } else{ Line line = lineList.get(i); if(stationExist(line, args[2]) != -1){ System.out.println(\u0026#34;Station duplicate\u0026#34;); } else{ int position = stationPosition(line, Integer.parseInt(args[3])); line.station.add(position, args[2]); line.stationMileage.add(position, Integer.valueOf(args[3])); System.out.println(\u0026#34;Add Station success\u0026#34;); } } } private static int stationPosition(Line line, int mileage) { Vector\u0026lt;Integer\u0026gt; stationMileage = line.getStationMileage(); int i; for(i=0;i\u0026lt;stationMileage.size();i++){ if(mileage\u0026lt;stationMileage.get(i)){ return i; } } return stationMileage.size(); } private static void delStation(Vector\u0026lt;Line\u0026gt; lineList, String[] args){ if(args.length \u0026lt; 3) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } int i = findLine(lineList, args[1]); int j = stationExist(lineList.get(i), args[2]); if( j != -1){ Line line = lineList.get(i); line.getStation().remove(j); line.getStationMileage().remove(j); System.out.println(\u0026#34;Delete Station success\u0026#34;); } else{ System.out.println(\u0026#34;Station does not exist\u0026#34;); } } private static void delLine(Vector\u0026lt;Line\u0026gt; lineList, String[] args){ if(args.length \u0026lt; 2){ System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } for (int i = 0; i \u0026lt; lineList.size(); i++) { Line line = lineList.get(i); if(Objects.equals(line.getLine(), args[1])){ lineList.remove(i); System.out.println(\u0026#34;Del Line success\u0026#34;); return; } } System.out.println(\u0026#34;Line does not exist\u0026#34;); } private static void addLine(Vector\u0026lt;Line\u0026gt; lineList, String[] args){ int num = (args.length - 3) / 2; if(args.length % 2==0){ System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } if(args.length \u0026lt; 3) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } if(lineList.isEmpty()){ } else if(findLine(lineList, args[1]) != -1){ System.out.println(\u0026#34;Line already exists\u0026#34;); return; } if(isInt(args[2]) == false) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); return; } if(Integer.parseInt(args[2]) \u0026lt;= 0) { System.out.println(\u0026#34;Capacity illegal\u0026#34;); return; } Line line = new Line(); line.setLine(args[1]); line.setCapacity(Integer.parseInt(args[2])); int i; for(i=1; i\u0026lt;=num; i++){ if(isInt(args[2*i+2]) == false) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); break; } else if(stationExist(line, args[2*i+1]) != -1){ System.out.println(\u0026#34;Station duplicate\u0026#34;); break; } else { int j; Vector\u0026lt;Integer\u0026gt; mileage = line.getStationMileage(); for(j=0;j\u0026lt;mileage.size();j++){ if(Integer.parseInt(args[2*i+2])\u0026lt;mileage.get(j)){ line.addStation(line, j, args[2*i+1], Integer.parseInt(args[2*i+2])); break; } } if(j==mileage.size()){ line.addStation(line, j, args[2*i+1], Integer.parseInt(args[2*i+2])); } } } if(i == num+1) { int j; String lineName = line.getLine(); if(lineList.isEmpty()){ lineList.addElement(line); } else{ for(j=0;j\u0026lt;lineList.size();j++){ Line line2 = lineList.get(j); if(lineName.compareTo(line2.getLine())\u0026lt;0){ lineList.add(j, line); break; } } if(j==lineList.size()){ lineList.add(j, line); } } System.out.println(\u0026#34;Add Line success\u0026#34;); } return; } private static int findLine(Vector\u0026lt;Line\u0026gt; lineList, String lineName){ for (int i = 0; i \u0026lt; lineList.size(); i++) { Line line = lineList.get(i); if(Objects.equals(line.getLine(), lineName)){ return i; } } return -1; } private static int stationExist(Line line, String stationName){ Vector\u0026lt;String\u0026gt; station = line.getStation(); return station.indexOf(stationName); } public static boolean isInt(String str){ try { int num=Integer.valueOf(str); return true; } catch (Exception e) { return false; } } public static boolean isDouble(String str){ try { double num=Double.valueOf(str); return true; } catch (Exception e) { return false; } } public static void addUser(Vector\u0026lt;User\u0026gt; userList, String[] splited){ if(splited.length == 4){ User user = new User(); User.setString(userList, user, splited); return; } else if(splited.length == 5){ Student student = new Student(); student.setDiscountNum(Integer.parseInt(splited[4])); Student.setString(userList, student, splited); return; } return; } } class Train{ private String trainType; private String trainNum; private String line; private Vector\u0026lt;Double\u0026gt; ticketPrice = new Vector\u0026lt;Double\u0026gt;(); private Vector\u0026lt;Integer\u0026gt; ticketNum = new Vector\u0026lt;Integer\u0026gt;(); public String getLine() { return line; } public void setLine(String line) { this.line = line; } public String getTrainNum() { return trainNum; } public void setTrainNum(String trainNum) { this.trainNum = trainNum; } public String getTrainType() { return trainType; } public void setTrainType(String trainType) { this.trainType = trainType; } public Vector\u0026lt;Double\u0026gt; getTicketPrice() { return ticketPrice; } public void setTicketPrice(Vector\u0026lt;Double\u0026gt; ticketPrice) { this.ticketPrice = ticketPrice; } public Vector\u0026lt;Integer\u0026gt; getTicketNum() { return ticketNum; } public void setTicketNum(Vector\u0026lt;Integer\u0026gt; ticketNum) { this.ticketNum = ticketNum; } } class Station{ private String name; public String getName(){ return name; } public void setName(String stationName){ name = stationName; } } class Line{ private String line; private int capacity; public Vector\u0026lt;String\u0026gt; station = new Vector\u0026lt;String\u0026gt;(); public Vector\u0026lt;Integer\u0026gt; stationMileage = new Vector\u0026lt;Integer\u0026gt;(); private int usedCapacity; public String toString(){ System.out.format(\u0026#34;%s %d/%d\u0026#34;,getLine(), getUsedCapacity(), getCapacity()); int i; for(i=0;i\u0026lt; station.size();i++){ System.out.format(\u0026#34; %s:%d\u0026#34;,getStation().get(i),getStationMileage().get(i)); } System.out.print(\u0026#34;\\n\u0026#34;); return null; } public String toString(int index){ System.out.format(\u0026#34;[%d] %s %d/%d\u0026#34;,index, getLine(), getUsedCapacity(), getCapacity()); int i; for(i=0;i\u0026lt; station.size();i++){ System.out.format(\u0026#34; %s:%d\u0026#34;,getStation().get(i),getStationMileage().get(i)); } System.out.print(\u0026#34;\\n\u0026#34;); return null; } public int getUsedCapacity() { return usedCapacity; } public void setUsedCapacity(int usedCapacity) { this.usedCapacity = usedCapacity; } public Vector\u0026lt;String\u0026gt; getStation(){ return station; } public Vector\u0026lt;Integer\u0026gt; getStationMileage(){ return stationMileage; } public void setStation(String name, int mileage){ station.addElement(name); stationMileage.addElement(mileage); } public String getLine(){ return line; } public void setLine(String lineName){ line = lineName; } public int getCapacity(){ return capacity; } public void setCapacity(int lineCapacity){ capacity = lineCapacity; } public void addStation(Line line, int index, String stationName, int mileage){ line.station.add(index, stationName); line.stationMileage.add(index, mileage); } } class Order{ private String trainNum; private String begin; private String destination; private String seat; private int seatNum; private double single; private double sum; private boolean paid = false; public double getSingle() { return single; } public void setSingle(double single) { this.single = single; } public boolean isPaid() { return paid; } public void setPaid(boolean paid) { this.paid = paid; } public String getTrainNum() { return trainNum; } public int getSeatNum() { return seatNum; } public String getBegin() { return begin; } public String getDestination() { return destination; } public String getSeat() { return seat; } public double getSum() { return sum; } public void setTrainNum(String trainNum) { this.trainNum = trainNum; } public void setBegin(String begin) { this.begin = begin; } public void setDestination(String destination) { this.destination = destination; } public void setSeat(String seat) { this.seat = seat; } public void setSeatNum(int seatNum) { this.seatNum = seatNum; } public void setSum(double sum) { this.sum = sum; } } class User { private String name; private String sex; private String Aadhaar; private boolean admin; private boolean isLogin; private double balance = 0; Vector\u0026lt;Order\u0026gt; orders = new Vector\u0026lt;Order\u0026gt;(); private boolean cert = true; public double getBalance() { return balance; } public void setBalance(double balance) { this.balance = balance; } public boolean isCert() { return cert; } public void setCert(boolean cert) { this.cert = cert; } public Vector\u0026lt;Order\u0026gt; getOrders() { return orders; } public void setOrders(Vector\u0026lt;Order\u0026gt; orders) { this.orders = orders; } public boolean isLogin() { return isLogin; } public void setLogin(boolean login) { isLogin = login; } public boolean getAdmin() { return admin; } public void setAdmin(boolean isAdmin) { admin = isAdmin; } public String getName() { return name; } public void setName(String myName) { name = myName; } public String getSex() { return sex; } public void setSex(String mySex) { sex = mySex; } public String getAadhaar() { return Aadhaar; } public void setAadhaar(String myAadhaar) { Aadhaar = myAadhaar; } @Override public String toString() { System.out.println(\u0026#34;Name:\u0026#34; + getName()); System.out.println(\u0026#34;Sex:\u0026#34; + getSex()); System.out.println(\u0026#34;Aadhaar:\u0026#34; + getAadhaar()); return null; } public static boolean str(String str) { final String number = \u0026#34;0123456789\u0026#34;; char[] ch = str.toCharArray(); if (ch.length == 0) { return false; } else { boolean is = true; if (number.indexOf(ch[0]) == -1) { for (int i = 0; i \u0026lt; ch.length; i++) { if ((ch[i] \u0026gt;= 65 \u0026amp;\u0026amp; ch[i] \u0026lt;= 90) || (ch[i] \u0026gt;= 97 \u0026amp;\u0026amp; ch[i] \u0026lt;= 122) || ch[i] == 95) { } else { is = false; } } return is; } else { return false; } } } public static boolean card(String cardNum, String sex) { char[] ch = cardNum.toCharArray(); boolean is = true; int num1 = (ch[0] - \u0026#39;0\u0026#39;) * 1000 + (ch[1] - \u0026#39;0\u0026#39;) * 100 + (ch[2] - \u0026#39;0\u0026#39;) * 10 + (ch[3] - \u0026#39;0\u0026#39;); int num2 = (ch[4] - \u0026#39;0\u0026#39;) * 1000 + (ch[5] - \u0026#39;0\u0026#39;) * 100 + (ch[6] - \u0026#39;0\u0026#39;) * 10 + (ch[7] - \u0026#39;0\u0026#39;); int num3 = (ch[8] - \u0026#39;0\u0026#39;) * 100 + (ch[9] - \u0026#39;0\u0026#39;) * 10 + (ch[10] - \u0026#39;0\u0026#39;); if (num1 == 0 || num1 \u0026gt; 1237) { is = false; } if (num2 \u0026lt; 20 || num2 \u0026gt; 460) { is = false; } if (num3 \u0026gt; 100) { is = false; } if (Objects.equals(sex, \u0026#34;F\u0026#34;) \u0026amp;\u0026amp; (ch[11] - \u0026#39;0\u0026#39;) != 0) { is = false; } if (Objects.equals(sex, \u0026#34;M\u0026#34;) \u0026amp;\u0026amp; (ch[11] - \u0026#39;0\u0026#39;) != 1) { is = false; } if (Objects.equals(sex, \u0026#34;O\u0026#34;) \u0026amp;\u0026amp; (ch[11] - \u0026#39;0\u0026#39;) != 2) { is = false; } return is; } public static boolean repeat(Vector\u0026lt;User\u0026gt; userlist, String cardNum) { boolean is = true; for(int i=0;i\u0026lt; userlist.size();i++) { if (Objects.equals(userlist.get(i).getAadhaar(), cardNum)) { return true; } } return false; } public static void setString(Vector\u0026lt;User\u0026gt; userlist, User user, String[] args) { // System.out.println(args.length); if (args.length != 4) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); } else { // System.out.println(args[2]); if (!str(args[1])) { System.out.println(\u0026#34;Name illegal\u0026#34;); } else if (!Objects.equals(args[2], \u0026#34;F\u0026#34;) \u0026amp;\u0026amp; !Objects.equals(args[2], \u0026#34;M\u0026#34;) \u0026amp;\u0026amp; !Objects.equals(args[2], \u0026#34;O\u0026#34;)) { System.out.println(\u0026#34;Sex illegal\u0026#34;); } else if (!card(args[3], args[2])) { System.out.println(\u0026#34;Aadhaar number illegal\u0026#34;); } else if (repeat(userlist, args[3])) { System.out.println(\u0026#34;Aadhaar number exist\u0026#34;); } else { user.setName(args[1]); user.setSex(args[2]); user.setAadhaar(args[3]); user.setAdmin(false); user.setLogin(false); userlist.addElement(user); user.toString(); } } } } class Student extends User { private int discountNum; public void setDiscountNum(int discountNum) { this.discountNum = discountNum; } public int getDiscountNum() { return discountNum; } @Override public String toString() { System.out.println(\u0026#34;Name:\u0026#34; + getName()); System.out.println(\u0026#34;Sex:\u0026#34; + getSex()); System.out.println(\u0026#34;Aadhaar:\u0026#34; + getAadhaar()); System.out.println(\u0026#34;Discount:\u0026#34; + getDiscountNum()); return null; } public static void setString(Vector\u0026lt;User\u0026gt; userlist, User user, String[] args) { // System.out.println(args.length); if (args.length != 5) { System.out.println(\u0026#34;Arguments illegal\u0026#34;); } else { // System.out.println(args[2]); if (!str(args[1])) { System.out.println(\u0026#34;Name illegal\u0026#34;); } else if (!Objects.equals(args[2], \u0026#34;F\u0026#34;) \u0026amp;\u0026amp; !Objects.equals(args[2], \u0026#34;M\u0026#34;) \u0026amp;\u0026amp; !Objects.equals(args[2], \u0026#34;O\u0026#34;)) { System.out.println(\u0026#34;Sex illegal\u0026#34;); } else if (!card(args[3], args[2])) { System.out.println(\u0026#34;Aadhaar number illegal\u0026#34;); } else if (repeat(userlist, args[3])) { System.out.println(\u0026#34;Aadhaar number exist\u0026#34;); } else { user.setName(args[1]); user.setSex(args[2]); user.setAadhaar(args[3]); user.setAdmin(false); user.setLogin(false); userlist.addElement(user); user.toString(); } } } } class Cert{ public static boolean isFile(String fileName){ try { BufferedReader br = new BufferedReader(new FileReader(fileName)); return true; } catch (Exception e) { return false; } } public static HashMap\u0026lt;String, Boolean\u0026gt; read(HashMap\u0026lt;String, Boolean\u0026gt; cert, String fileName, Vector\u0026lt;User\u0026gt; userList) throws IOException { // fileName = \u0026#34;CTS1\\\\\u0026#34; + fileName; if(isFile((fileName))){ try { BufferedReader br = new BufferedReader(new FileReader(fileName)); String line; while ((line = br.readLine()) != null) { String[] lines = line.split(\u0026#34;,\u0026#34;); cert.put(lines[0], lines[1].equals(\u0026#34;P\u0026#34;)); } br.close(); } catch(IOException e){ throw new RuntimeException(); } Iterator\u0026lt;Map.Entry\u0026lt;String, Boolean\u0026gt;\u0026gt; iterator = cert.entrySet().iterator(); int positive = 0, negative = 0; while (iterator.hasNext()) { Map.Entry\u0026lt;String, Boolean\u0026gt; entry = iterator.next(); if(entry.getValue()){ positive++; } else{ negative++; } String userCard = entry.getKey(); for(int i=0;i\u0026lt;userList.size();i++){ User user = userList.get(i); if(Objects.equals(userCard, user.getAadhaar())){ user.setCert(entry.getValue()); break; } } // System.out.print(entry.getValue()); } System.out.format(\u0026#34;Import Success, Positive:%d Negative:%d\\n\u0026#34;,positive,negative); } else { System.out.println(\u0026#34;no such file\u0026#34;); } return cert; } } ","permalink":"https://mathieulin.github.io/myblog/posts/cts4/","summary":"这是CTS代码 快速通过CTS 获取评测数据（读书人的事情嘛）\nString input=\u0026#34;\u0026#34;; while (true) { argStr = in.nextLine(); [+] input+=argStr; [+]\tinput+=\u0026#34;;\u0026#34;; String[] splited = argStr.split(\u0026#34;\\\\s+\u0026#34;); ...... else if (Objects.equals(splited[0], \u0026#34;QUIT\u0026#34;)){ [+]\tSystem.out.println(input);\tSystem.out.println(\u0026#34;----- Good Bye! -----\u0026#34;); System.exit(0); } 然后你就得到了\nTunakTunakTun;addLine Line13 4 Dazhongshi 28 Zhichunlu 30 Wudaokou 48 Shangdi 96 Xierqi 121 Longze 148;addLine Manchu 2 Shahe 20 Hamazhen 59 Wulongbei 150 Tangshancheng 207 Gaolimen 281 Fenghuangcheng 272 Sitaizi 430 Jiguanshan 498 Benxihu 586;addTrain K0012 Line13 22 90 7 120;addTrain G1001 Manchu 22 90 7 120 2.","title":"CTS4"},{"content":"我的第三篇博客 什么都没有？？？？\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.vLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.vvvLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.vvvLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n","permalink":"https://mathieulin.github.io/myblog/posts/my-third-post/","summary":"我的第三篇博客 什么都没有？？？？\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","title":"My Third Post"},{"content":"可能会有所遗漏，建议还是配合视频使用吧\n1. 登录服务器 ssh ubuntu@121.5.2. vscode远程连接服务器\n2. vscode远程连接服务器 按照视频教程无脑硬莽\n3.更改配置 下载nginx sudo apt install nginx sudo systemctl start nginx 在服务器中\ncd /etc/nginx/conf.d\rsudo touch daidai.conf\rsudo vim daidai.conf server {\rlisten 84;//84改为你的端口号\r# listen 443 ssl;\r# server_name zewan.top www.zewan.top;\rserver_name 121.5.31.11;\r# server_name www.noietch.cn;\rlocation / {\rroot /home/ubuntu/hotel/hotel_vue/frontend-demo-daidai;\rindex index.html index.htm;\rtry_files $uri $uri/ /index.html;\r}\rlocation /api { include /etc/nginx/uwsgi_params;\ruwsgi_pass 127.0.0.1:8080; }\r} 4. 启动nginx sudo systemctl start nginx //检查一下 sudo nginx -t //重启一下 sudo nginx -s reload 5.构建项目 更改一下本地的hotel项目（显示一下自己的姓名学号，我在输入框里placeholder显示）\nnpm run build\n将dist文件重命名为frontend-demo-daidai\n终端执行scp -r .\\frontend-demo-daidai\\ ubuntu@121.5.31.11:/home/ubuntu/hotel/hotel_vue/\n应该就好了？\n","permalink":"https://mathieulin.github.io/myblog/posts/%E5%89%8D%E7%AB%AF%E9%83%A8%E7%BD%B2/","summary":"可能会有所遗漏，建议还是配合视频使用吧\n1. 登录服务器 ssh ubuntu@121.5.2. vscode远程连接服务器\n2. vscode远程连接服务器 按照视频教程无脑硬莽\n3.更改配置 下载nginx sudo apt install nginx sudo systemctl start nginx 在服务器中\ncd /etc/nginx/conf.d\rsudo touch daidai.conf\rsudo vim daidai.conf server {\rlisten 84;//84改为你的端口号\r# listen 443 ssl;\r# server_name zewan.top www.zewan.top;\rserver_name 121.5.31.11;\r# server_name www.noietch.cn;\rlocation / {\rroot /home/ubuntu/hotel/hotel_vue/frontend-demo-daidai;\rindex index.html index.htm;\rtry_files $uri $uri/ /index.html;\r}\rlocation /api { include /etc/nginx/uwsgi_params;\ruwsgi_pass 127.0.0.1:8080; }\r} 4. 启动nginx sudo systemctl start nginx //检查一下 sudo nginx -t //重启一下 sudo nginx -s reload 5.","title":"前端项目傻逼式部署"},{"content":"这是大标题 这是二级标题 $$a\\lt b$$\n这是小分点 这也是小分店 这是小小分店 import java.utils.iostream ","permalink":"https://mathieulin.github.io/myblog/posts/special/","summary":"这是大标题 这是二级标题 $$a\\lt b$$\n这是小分点 这也是小分店 这是小小分店 import java.utils.iostream ","title":"我的一篇奇怪的博客"},{"content":"我的第一篇博客 什么都没有？？？？\n我是真的无语，这yyl真的我tm吐了啊！！！\n","permalink":"https://mathieulin.github.io/myblog/posts/my-first-post/","summary":"我的第一篇博客 什么都没有？？？？\n我是真的无语，这yyl真的我tm吐了啊！！！","title":"My First Post"}]